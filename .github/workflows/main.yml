
# This is a basic workflow to help you get started with Actions

name: Build APK with Github Actions
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Setup-environment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.3.1
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.8 # optional, default is 3.x
          # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv.
          cache: # optional
          # The target architecture (x86, x64) of the Python interpreter.
          architecture: x64# optional
          # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
          token: # optional, default is ${{ github.token }}
          # Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: # optional
    
    
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: pip install buildozer

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          pip install cython
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev

      - name: install gstreamer
        run: |
          sudo apt-get install -y \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good
            
      - name: install dependencies
        run: |
          sudo apt-get install build-essential \
            libsqlite3-dev \
            sqlite3 \
            bzip2 \
            libbz2-dev \
            zlib1g-dev \
            libssl-dev \
            openssl \
            libgdbm-dev \
            libgdbm-compat-dev \
            liblzma-dev \
            libreadline-dev \
            libncursesw5-dev \
            libffi-dev \
            uuid-dev \
            libffi6
          
      - name: install dependencies 2
        run: |
          sudo apt-get install libffi-dev \
            libssl-dev
              
      - name: initialize buildozer
        run: buildozer init
